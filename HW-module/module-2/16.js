function makeArray(firstArray, secondArray, maxLength) {
  // Пиши код ниже этой строки

return (firstArray.concat(secondArray)).slice(0, maxLength)
  
  // Пиши код выше этой строки
}

console.log(makeArray(['Манго', 'Поли'], ['Аякс', 'Челси'], 3)); 
console.log(makeArray(['Манго', 'Поли', 'Хьюстон'], ['Аякс', 'Челси'], 4) ); 
console.log(makeArray(['Манго'], ['Аякс', 'Челси', 'Поли', 'Хьюстон'], 3)); 
console.log(makeArray(['Земля', 'Юпитер'], ['Нептун', 'Уран'], 2)); 
console.log(makeArray(['Земля', 'Юпитер'], ['Нептун', 'Уран'], 4)); 
console.log(makeArray(['Земля', 'Юпитер'], ['Нептун', 'Уран', 'Венера'], 0)); 

/*  

Композиция массивов
Задание
Напиши функцию makeArray(firstArray, secondArray, maxLength) для создания нового массива 
со всеми элементами двух исходных firstArray и secondArray. Параметр maxLength содержит максимально допустимую длину нового массива.

Если количество элементов нового массива больше maxLength, функция должна вернуть копию массива длиной maxLength элементов.

В противном случае функция должна вернуть новый массив целиком.

Тесты
Объявлена функция makeArray(firstArray, secondArray, maxLength)
Вызов makeArray(['Манго', 'Поли'], ['Аякс', 'Челси'], 3) возвращает ['Манго', 'Поли', 'Аякс'].
Вызов makeArray(['Манго', 'Поли', 'Хьюстон'], ['Аякс', 'Челси'], 4) возвращает ['Манго', 'Поли', 'Хьюстон', 'Аякс'].
Вызов makeArray(['Манго'], ['Аякс', 'Челси', 'Поли', 'Хьюстон'], 3) возвращает ['Манго', 'Аякс', 'Челси'].
Вызов makeArray(['Земля', 'Юпитер'], ['Нептун', 'Уран'], 2) возвращает ['Земля', 'Юпитер'].
Вызов makeArray(['Земля', 'Юпитер'], ['Нептун', 'Уран'], 4) возвращает ['Земля', 'Юпитер', 'Нептун', 'Уран'].
Вызов makeArray(['Земля', 'Юпитер'], ['Нептун', 'Уран', 'Венера'], 0) возвращает [].
Вызов функции makeArray() со случайными массивами и случайным числом возвращает правильный массив.

console.log(); 
console.log(); 
console.log(); 
console.log(); 
console.log(); 

*/
